import re

def is_palindrome(s):
    # Remove non-alphanumeric characters and convert to lowercase
    cleaned = re.sub(r'[^A-Za-z0-9]', '', s).lower()
    return cleaned == cleaned[::-1]

def all_palindromic_substrings(text):
    palindromes = set()
    n = len(text)
    for i in range(n):
        for j in range(i + 2, n + 1):  # Length >= 2
            substring = text[i:j]
            if is_palindrome(substring):
                palindromes.add(substring)
    return palindromes

def longest_palindromic_substring(text):
    n = len(text)
    max_palindrome = ''
    for i in range(n):
        for j in range(i + 1, n + 1):
            substring = text[i:j]
            if is_palindrome(substring) and len(substring) > len(max_palindrome):
                max_palindrome = substring
    return max_palindrome

# --- Main Program ---
input_text = input("Enter a string: ")

if is_palindrome(input_text):
    print("✅ The entire string is a palindrome.")
else:
    print("❌ The entire string is NOT a palindro
